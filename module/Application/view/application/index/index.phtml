<?php
/**
 * @var Laminas\View\Renderer\PhpRenderer $this
 */
?>
<style>
    .space {
        position: relative;
        width: 60px;
        height: 60px;
    }

    .space.white {
        background-color: #cccccc;
    }

    .space.black {
        background-color: #555555;
    }

    .checker {
        position: absolute;
        top: 10px;
        left: 10px;
        right: 10px;
        bottom: 10px;
        width: 40px;
        height: 40px;
        border-radius: 20px;
        box-shadow: inset 0 0 3px #000000;
    }

    @keyframes highlightchecker {
        0% {transform: scale(1)} 60% {transform: scale(1)} 70%{transform: scale(1.1)} 100%{transform: scale(1.0)}
    }

    .checker.movable {
        cursor: pointer;
        animation: 2s linear 5s infinite normal highlightchecker;
        animation-iteration-count:infinite;
    }

    .checker.black {
        background-color: #000000;
    }

    .checker.white {
        background-color: #ffffff;
    }
</style>
<a href='/application/index/new'>new</a>
<div id='board-container'>
    <?=
    $this->partial('partials/board.phtml', [
        'turn' => $turn,
        'checkers' => $match->getCheckers(),
        'possibleMoves' => $match->getPossibleMoves(),
        'userTeam' => $userTeam
    ])
    ?>
</div>

<script>
    var possibleMovementsFromDragging;
    function allowDrop(ev) {
        ev.preventDefault();
        /*const destinySpaceId = ev.srcElement.id;
         if (possibleMovementsFromDragging.includes(destinySpaceId))
         ev.preventDefault();*/
    }

    function drag(ev) {
        possibleMovementsFromDragging = JSON.parse(ev.target.getAttribute('data-canmoveto'))
        possibleMovementsFromDragging = possibleMovementsFromDragging.map(movement => {
            return `space${movement.row}${movement.column}`;
        });

        ev.dataTransfer.setData("id", ev.target.id);
        ev.dataTransfer.setData("position", ev.target.getAttribute('data-position'));
    }

    function drop(ev) {
        ev.preventDefault();
        var id = ev.dataTransfer.getData('id');
        var curPosition = ev.dataTransfer.getData("position");
        var position = ev.target.getAttribute('data-position');
        var match = (new URLSearchParams(document.location.search)).get('match');

        //ev.target.appendChild(document.getElementById(id));
        //window.location.href = `/application/index/move?currow=${curRow}&curcolumn=${curColumn}&row=${row}&column=${column}`;
        fetch(`/application/index/move?match=${match}&curposition=${curPosition}&position=${position}`, {
            method: 'POST'
        })
                .then(res => res.text())
                .then(html => {
                    document.getElementById('board-container').innerHTML = html;
                })
                .catch(err => console.error(err));
    }
</script>
